extends layouts/profile.pug

append content
    section.section
        .container
            .columns.is-centered
                #posts.column.is-two-fifths
                    - let count = 0;
                    each post in posts
                        - count++
                        article.media.post(class=(count === posts.length - 1 ? "last" : "") data-index=count)
                            .media-content
                                .content
                                    p.
                                        #[strong #{ post._data.username }] #[small #{ post._data.last_updated }] #[br]
                                        #{ post._data.content }
                                    hr
                                    nav.level
                                        .level-left
                                            a.level-item.get(data-action="reply") reply
                                            if post._data.has_replies
                                                a.level-item.get(data-action="view" data-post=post._data.id) view replies
                                    .comment(style="display: none;")
                                        form(action="/app/post" method="POST")
                                            input(type="hidden" name="id" value=post._data.id)
                                            input(type="hidden" name="has_replies" value="0")
                                            .field
                                                .control
                                                    textarea.textarea(name="content" placeholder="...")
                                            .field
                                                .control
                                                    button.button.is-link.is-small(type="submit") Submit
            p#loadMore
                button.button load more
        #commentModal.modal
            .modal-background
            .modal-card
                header.modal-card-head
                    p.modal-card-title Replies
                    button.delete(aria-label="close")
                section.modal-card-body
                    .content
                        p
                footer.modal-card-foot
append scripts
    script.
        const posts = document.getElementById('posts');
        const modal = document.getElementById('commentModal');
        const load  = document.querySelector('#loadMore button');

        load.addEventListener('click', evt => {
            const lastIndex = document.querySelector('.last').dataset.index;
            const xhr = new XMLHttpRequest();
            xhr.addEventListener('load', loadPosts);
            xhr.open('GET', '/app/getPosts?last_index=' + lastIndex);
            xhr.send();
        });

        posts.addEventListener('click', evt => {
            if (evt.target.dataset.action) {
                const action = evt.target.dataset.action;
                if (action === 'reply') {
                    evt.target.parentElement.parentElement.parentElement.querySelector('.comment').style.display = 'block';
                } else {
                    getComments(evt.target.dataset.post);
                }
            }
        });

        modal.querySelector('button.delete').addEventListener('click', evt => {
            modal.classList.toggle('is-active');
        });

        function loadPosts(dat) {
            console.log(this.responseText);
            posts.appendChild(this.responseText);
        }

        function success(dat) {
            console.log(this.responseText);
            modal.classList.toggle('is-active');
            modal.querySelector('.modal-card-body .content p').innerHTML = this.responseText;
        }

        function getComments(postId) {
            const xhr = new XMLHttpRequest();
            xhr.addEventListener('load', success);
            xhr.open('GET', '/app/getComments?postId=' + postId);
            xhr.send();
        }

        function createReply() {

        }

